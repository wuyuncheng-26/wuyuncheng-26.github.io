<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>用不开魔法的最正规方法来使用 GPT</title>
    <link href="/2023/12/27/%E7%94%A8%E4%B8%8D%E5%BC%80%E9%AD%94%E6%B3%95%E7%9A%84%E6%9C%80%E6%AD%A3%E8%A7%84%E6%96%B9%E6%B3%95%E6%9D%A5%E4%BD%BF%E7%94%A8-GPT/"/>
    <url>/2023/12/27/%E7%94%A8%E4%B8%8D%E5%BC%80%E9%AD%94%E6%B3%95%E7%9A%84%E6%9C%80%E6%AD%A3%E8%A7%84%E6%96%B9%E6%B3%95%E6%9D%A5%E4%BD%BF%E7%94%A8-GPT/</url>
    
    <content type="html"><![CDATA[<p>项目文档：<a href="https://docs.pandoranext.com/">https://docs.pandoranext.com</a></p><p>大佬建的演示站：<a href="https://chat.oaifree.com/">https://chat.oaifree.com</a></p><p>大佬写的教程：<a href="https://zhile.io/2023/12/09/pandoranext-introduction.html">https://zhile.io/2023/12/09/pandoranext-introduction.html</a></p><p>大佬写的教程里面有注册账号的方法，注意不能用国内邮箱，注册个 hotmail 就行了</p><p>我的教程视频将在 12 月 30 日发布</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>不开梯子使用 New Bing</title>
    <link href="/2023/12/22/%E4%B8%8D%E5%BC%80%E6%A2%AF%E5%AD%90%E4%BD%BF%E7%94%A8-New-Bing/"/>
    <url>/2023/12/22/%E4%B8%8D%E5%BC%80%E6%A2%AF%E5%AD%90%E4%BD%BF%E7%94%A8-New-Bing/</url>
    
    <content type="html"><![CDATA[<p>项目地址：<a href="https://github.com/weaigc/bingo">https://github.com/weaigc/bingo</a></p><p>部署视频：<a href="https://www.bilibili.com/video/BV1kG411e7HW">https://www.bilibili.com/video/BV1kG411e7HW</a></p><p>体验网址：<a href="https://wuyuncheng-26.github.io/newbing">https://wuyuncheng-26.github.io/newbing</a></p><p>大家不想麻烦的话可以用我的，不过自己部署其实也挺简单的</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>什么是 GitHub？</title>
    <link href="/2023/12/02/%E4%BB%80%E4%B9%88%E6%98%AF-GitHub%EF%BC%9F/"/>
    <url>/2023/12/02/%E4%BB%80%E4%B9%88%E6%98%AF-GitHub%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>GitHub 是一个面向开源及私有软件项目的托管平台，它拥有 1 亿以上的开发人员</p><p>简单来说，你可以<strong>上传代码到 GitHub 上</strong>，别人可以<strong>下载并使用你的代码</strong></p><p>GitHub 上有很多优秀的开源项目，如 Linux、Electron、Node.js</p><p>你可以<strong>使用这些项目</strong>，还可以<strong>帮助别人写代码</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>GitHub 全是英文看不懂？教你把它变成中文！</title>
    <link href="/2023/12/01/GitHub-%E5%85%A8%E6%98%AF%E8%8B%B1%E6%96%87%E7%9C%8B%E4%B8%8D%E6%87%82%EF%BC%9F%E6%95%99%E4%BD%A0%E6%8A%8A%E5%AE%83%E5%8F%98%E6%88%90%E4%B8%AD%E6%96%87%EF%BC%81/"/>
    <url>/2023/12/01/GitHub-%E5%85%A8%E6%98%AF%E8%8B%B1%E6%96%87%E7%9C%8B%E4%B8%8D%E6%87%82%EF%BC%9F%E6%95%99%E4%BD%A0%E6%8A%8A%E5%AE%83%E5%8F%98%E6%88%90%E4%B8%AD%E6%96%87%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<p>今天我们要介绍的项目是一个<a href="https://github.com/maboloshi/github-chinese">汉化 GitHub 的脚本</a></p><p>在项目的文档里明确的写着安装过程，请大家自己查阅</p><p>安装视频：<a href="https://www.bilibili.com/video/BV1iF411k7cu">https://www.bilibili.com/video/BV1iF411k7cu</a></p><p>有什么问题可以在视频评论区找我</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>共享的 ChatGPT 账号，不用魔法！</title>
    <link href="/2023/09/21/%E5%85%B1%E4%BA%AB%E7%9A%84-ChatGPT-%E8%B4%A6%E5%8F%B7%EF%BC%8C%E4%B8%8D%E7%94%A8%E9%AD%94%E6%B3%95%EF%BC%81/"/>
    <url>/2023/09/21/%E5%85%B1%E4%BA%AB%E7%9A%84-ChatGPT-%E8%B4%A6%E5%8F%B7%EF%BC%8C%E4%B8%8D%E7%94%A8%E9%AD%94%E6%B3%95%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<p>网站：<a href="https://chat-shared3.zhile.io/shared.html">https://chat-shared3.zhile.io/shared.html</a></p><p>截止目前，这个网站一共有 1841 个共享账号</p><p>可以随便挑一个使用频率低的账号试一下</p><p>这对于我这种守法市民，真是一种福利</p><p><strong>使用频率高的账号基本上都已经被 OpenAI 封了（Plus 的几个全被封了）</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>免费的 ChatGPT API Key</title>
    <link href="/2023/09/20/%E5%85%8D%E8%B4%B9%E7%9A%84-ChatGPT-API-Key/"/>
    <url>/2023/09/20/%E5%85%8D%E8%B4%B9%E7%9A%84-ChatGPT-API-Key/</url>
    
    <content type="html"><![CDATA[<p>第一步：登录你的 GitHub 账号</p><p>第二步：打开<a href="https://github.com/chatanywhere/GPT_API_free">这个界面</a>后，往下翻，找到<strong>申请内测免费Key</strong>按钮，点击它。</p><p>第三步：授权访问你的 GitHub 账号，之后会自动跳转到一个界面，上面有你的API Key，复制它。</p><p>第四步：打开记事本，把你的 API Key 粘贴到记事本里，然后保存。</p><p><strong>注意：GPT-3.5 每小时只能使用 60 次，请勿过度使用</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>如何生成字符画</title>
    <link href="/2023/07/25/%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E5%AD%97%E7%AC%A6%E7%94%BB/"/>
    <url>/2023/07/25/%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E5%AD%97%E7%AC%A6%E7%94%BB/</url>
    
    <content type="html"><![CDATA[<p>生成字符画需要安装软件包<strong>figlet</strong></p><p>Ubuntu安装方法：<code>sudo apt install figlet</code></p><p>CentOS安装方法：<code>sudo yum install figlet</code></p><p>安装完后，你可以输入<code>figlet test</code>来测试一下是否安装成功</p><p>下面是两个演示如何使用的例子：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ figlet -f slant Python<br>    ____        __  __<br>   <span class="hljs-regexp">/ __ \__  __/</span> <span class="hljs-regexp">/_/</span> /_  ____  ____<br>  <span class="hljs-regexp">/ /</span>_<span class="hljs-regexp">/ /</span> <span class="hljs-regexp">/ /</span> <span class="hljs-regexp">/ __/</span> __ \<span class="hljs-regexp">/ __ \/ __ \</span><br><span class="hljs-regexp"> /</span> ____<span class="hljs-regexp">/ /</span>_<span class="hljs-regexp">/ /</span> <span class="hljs-regexp">/_/</span> <span class="hljs-regexp">/ /</span> <span class="hljs-regexp">/ /</span>_<span class="hljs-regexp">/ /</span> <span class="hljs-regexp">/ /</span> /<br><span class="hljs-regexp">/_/</span>    \__, <span class="hljs-regexp">/\__/</span>_<span class="hljs-regexp">/ /</span>_<span class="hljs-regexp">/\____/</span>_<span class="hljs-regexp">/ /</span>_/<br>      <span class="hljs-regexp">/____/</span><br></code></pre></td></tr></table></figure><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">$ figlet -f big Java<br>      _<br>     |<span class="hljs-string"> </span>|<br>     |<span class="hljs-string"> </span>|<span class="hljs-string"> __ ___   ____ _</span><br><span class="hljs-string"> _   </span>|<span class="hljs-string"> </span>|<span class="hljs-string">/ _` \ \ / / _` </span>|<br>|<span class="hljs-string"> </span>|<span class="hljs-string">__</span>|<span class="hljs-string"> </span>|<span class="hljs-string"> (_</span>|<span class="hljs-string"> </span>|<span class="hljs-string">\ V / (_</span>|<span class="hljs-string"> </span>|<br> \____/ \__,_|<span class="hljs-string"> \_/ \__,_</span>|<br></code></pre></td></tr></table></figure><p>这两个例子中的-f后面可以指定字符画的样式，可用的样式可以通过<code>showfigfonts</code>查看</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>速度超级快的 numpy</title>
    <link href="/2023/07/19/%E9%80%9F%E5%BA%A6%E8%B6%85%E7%BA%A7%E5%BF%AB%E7%9A%84-numpy/"/>
    <url>/2023/07/19/%E9%80%9F%E5%BA%A6%E8%B6%85%E7%BA%A7%E5%BF%AB%E7%9A%84-numpy/</url>
    
    <content type="html"><![CDATA[<p><strong>numpy</strong> 是一个 Python 的第三方库，它里面提供了更快的数组，我们可以用<code>pip install numpy</code>来安装它。</p><p><strong>numpy</strong> 里面提供了 <strong>ndarray</strong>，它比Python内置的列表快。</p><p>例如，我想用 <strong>numpy</strong> 创造一个数组a，里面有元素1、2、3、4和5，我们可以这样做：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy<br>a = numpy.ndarray([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>])<br></code></pre></td></tr></table></figure><p><strong>numpy</strong>官网：<a href="https://numpy.org/">https://numpy.org</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python 之禅</title>
    <link href="/2023/07/19/Python-%E4%B9%8B%E7%A6%85/"/>
    <url>/2023/07/19/Python-%E4%B9%8B%E7%A6%85/</url>
    
    <content type="html"><![CDATA[<p>在 Python 中输入<code>import this</code>就可以看到 Python 之禅</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs applescript">The Zen <span class="hljs-keyword">of</span> Python, <span class="hljs-keyword">by</span> Tim Peters<br><br>Beautiful <span class="hljs-keyword">is</span> better than ugly.<br>Explicit <span class="hljs-keyword">is</span> better than implicit.<br>Simple <span class="hljs-keyword">is</span> better than complex.<br>Complex <span class="hljs-keyword">is</span> better than complicated.<br>Flat <span class="hljs-keyword">is</span> better than nested.<br>Sparse <span class="hljs-keyword">is</span> better than dense.<br>Readability counts.<br>Special cases aren&#x27;t special enough <span class="hljs-keyword">to</span> break <span class="hljs-keyword">the</span> rules.<br>Although practicality beats purity.<br>Errors should never pass silently.<br>Unless explicitly silenced.<br>In <span class="hljs-keyword">the</span> face <span class="hljs-keyword">of</span> ambiguity, refuse <span class="hljs-keyword">the</span> temptation <span class="hljs-keyword">to</span> guess.<br>There should be one<span class="hljs-comment">-- and preferably only one --obvious way to do it.</span><br>Although <span class="hljs-keyword">that</span> way may <span class="hljs-keyword">not</span> be obvious <span class="hljs-keyword">at</span> <span class="hljs-keyword">first</span> unless you&#x27;re Dutch.<br>Now <span class="hljs-keyword">is</span> better than never.<br>Although never <span class="hljs-keyword">is</span> often better than *right* now.<br>If <span class="hljs-keyword">the</span> implementation <span class="hljs-keyword">is</span> hard <span class="hljs-keyword">to</span> explain, <span class="hljs-keyword">it</span>&#x27;s a bad idea.<br>If <span class="hljs-keyword">the</span> implementation <span class="hljs-keyword">is</span> easy <span class="hljs-keyword">to</span> explain, <span class="hljs-keyword">it</span> may be a good idea.<br>Namespaces are one honking great idea <span class="hljs-comment">-- let&#x27;s do more of those!</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python 输出改变颜色</title>
    <link href="/2023/07/19/Python-%E8%BE%93%E5%87%BA%E6%94%B9%E5%8F%98%E9%A2%9C%E8%89%B2/"/>
    <url>/2023/07/19/Python-%E8%BE%93%E5%87%BA%E6%94%B9%E5%8F%98%E9%A2%9C%E8%89%B2/</url>
    
    <content type="html"><![CDATA[<p>我们可以运用<code>print(&quot;\033[显示方式;字体颜色;背景颜色 + m + 内容 + \033[0m&quot;)</code>来给要输出的内容改变颜色</p><p>比如说<code>print(&quot;\033[1;33;44mtest\033[0m&quot;)</code>就可以显示出高亮且字体颜色为黄色，背景颜色为蓝色的 test</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
